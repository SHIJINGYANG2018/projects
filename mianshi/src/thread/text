http://www.cnblogs.com/nexiyi/p/java_memory_model_and_thread.html

Java高并发
synchronizer
同步容器
Thread Pool executor

java 内存模型的特性      (Java Memory Model ,JMM)


原子性  可见性   有序性

工作内存与主内存之间的交互操作
  lock  锁定
  unlock 解锁
  read  读取
  load  载入
  use   使用
  assign 赋值
  store 存储
  write 写入

原子性：由Java内存模型来直接保证的原子性变量的操作包括如上，  read、load、use 、assign、store、write
       我们大致以为基本数据类型的访问读写都具备原子性，（long、double 非原子性）
       synchronized块之间的操作也是原子性的

可见性：可见性是当一个线程修改了共享变量的值，其他线程能够立即得知这个修改，  synchronized  final 两个关键字也能实现可见性

有序性：如果在被线程内观察，所有的操作都是有序的，如果在一个线程观察另一个线程，所有的操作都是无序的。
            前半句就是“线程内表现为穿行的语义”  后半句是“指令重排序”现象和“工作内存与主内存同步延迟” 现象


Java语言提供了volatile和synchronized两个关键字来保证线程之间的操作的有序性，
    volatile本身就包括了禁止重排序的语义，而synchronized则是由“一个变量在同一时刻只允许一个线程对其进行lock操作”这个规则获得的、
    这条规则决定了持有同一个锁的两个同步代码只能串行地进入

线程的状态
5种

volatile  可见性   轻量级
synchronized  原子性  可见性   重量级